@model Domain.Models.MenuViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_NewLayout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>MenuViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Link, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
        </div>
    </div>   
    <div class="form-group">
        @Html.LabelFor(model => model.MenuTypeId, "MenuTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(x => x.MenuTypeId, new SelectList(ViewBag.MenuType, "MenuTypeId", "Name"), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MenuTypeId, "", new { @class = "text-danger" })
        </div>
    </div>
    <script type="text/javascript">
            function BrowseServer() {
                var finder = new CKFinder();
                //finder.basePath = '../';
                finder.selectActionFunction = SetFileField;
                finder.popup();
            }
            function SetFileField(fileUrl) {
                document.getElementById('Image').value = fileUrl;
            }
    </script>
    <div class="form-group">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="editor-field col-md-10">
            @Html.EditorFor(model => model.Image)
            <input type="button" value="Chọn Ảnh ..." onclick="BrowseServer();" />
            @Html.ValidationMessageFor(model => model.Image)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
